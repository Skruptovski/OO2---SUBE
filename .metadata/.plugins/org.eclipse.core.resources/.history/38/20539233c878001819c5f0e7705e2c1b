package datos;

import java.util.GregorianCalendar;
import java.util.List;
import java.util.Set;

import negocio.CargaABM;
import negocio.EstacionABM;
import negocio.Funciones;
import negocio.TarjetaABM;
import negocio.UsuarioABM;

public class Boleteria {
	private long idBoleteria;
	private String boleteria;
	private Set<Carga> cargas;
	
	public Boleteria (){}

	public Boleteria(String boleteria) {
		this.boleteria = boleteria;
	}

	public long getIdBoleteria() {
		return idBoleteria;
	}

	protected void setIdBoleteria(long idBoleteria) {
		this.idBoleteria = idBoleteria;
	}

	public String getBoleteria() {
		return boleteria;
	}

	public void setBoleteria(String boleteria) {
		this.boleteria = boleteria;
	}

	
	public Set<Carga> getCargas() {
		return cargas;
	}

	public void setCargas(Set<Carga> cargas) {
		this.cargas = cargas;
	}
	
	public void cargarSaldo(Tarjeta tarjeta, double monto) throws Exception{
		if (tarjeta.isBaja())throw new Exception("La tarjeta fue dada de baja");
		UsuarioABM uabm = UsuarioABM.getInstanciaUsuarioABM();
		Usuario usuario = null;
		int diaBoletoEstudiantil = 5;
		boolean boletoEstudiantil=false;
		CargaABM cabm = CargaABM.getInstanciaCargaABM();
		TarjetaABM tabm = TarjetaABM.getInstanciaTarjetaABM();
		GregorianCalendar fechaHoraCarga = new GregorianCalendar();
		Carga cargaAux = null;
		List<Carga> cargas = tabm.traerCargasBEDeTarjeta(tarjeta.getIdTarjeta());
		if(!cargas.isEmpty()){
			cargaAux = cargas.get(cargas.size()-1);
			System.out.println("isabeil");
			}
		if(tarjeta.getUsuario()!=null){
			System.out.println("isabeila");
			usuario = uabm.traerUsuarioYBeneficio(tarjeta.getUsuario().getIdUsuario());
			Beneficio beneficio = null;	
			if(usuario!=null){
				beneficio = usuario.getBeneficio();	
				System.out.println("isabeilo");
			}
			if(monto==-1) {
				System.out.println("4");
				if(beneficio instanceof BoletoEstudiantil){
					System.out.println("4");
					if(Funciones.traerNumeroMes(cargaAux.getFechaHoraCarga())<Funciones.traerNumeroMes(fechaHoraCarga)){
						if(Funciones.traerNumeroDiaMes(fechaHoraCarga)<diaBoletoEstudiantil)throw new Exception("Aun no puedes solicitar el boleto estudiantil");
						monto=301;
						boletoEstudiantil=true;
						
					}
					
				}else{
					throw new Exception("No eres beneficiario de Boleto Estudiantil");	
				}
			}
		}
		cabm.agregar(tarjeta, this, fechaHoraCarga, monto, boletoEstudiantil);
		double saldoNuevo = tarjeta.getSaldo()+monto;
		tarjeta.setSaldo(saldoNuevo);
		tabm.modificar(tarjeta);
	}
	@Override
	public String toString() {
		return "Boleteria [idBoleteria=" + idBoleteria + ", boleteria=" + boleteria + "]";
	}
	
	

}
